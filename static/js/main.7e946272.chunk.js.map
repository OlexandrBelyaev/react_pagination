{"version":3,"sources":["components/Pagination.jsx","App.js","index.js"],"names":["Pagination","state","activePage","props","page","listOfPages","Array","total","fill","setActivePage","pageNumber","setState","nextPage","stepPerPage","perPage","prevPage","this","data","Number","aria-label","className","type","onClick","map","index","key","React","PureComponent","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"8OAIMA,G,kNACJC,MAAQ,CACNC,WAAY,EAAKC,MAAMC,M,EAGzBC,YAAc,IAAIC,MAAM,EAAKH,MAAMI,OAAOC,KAAK,G,EAE/CC,cAAgB,SAAAC,GAAU,OAAI,WAC5B,EAAKC,SAAS,CACZT,WAAYQ,M,EAIhBE,SAAW,WACT,IAAMC,EACJ,EAAKZ,MAAMC,WAAa,EAAKC,MAAMW,QAAU,EAAKX,MAAMI,MACpD,EAAKJ,MAAMI,MAAQ,EAAKN,MAAMC,WAC9B,EAAKC,MAAMW,QAEjB,EAAKH,UAAS,SAACV,GACb,OAAIA,EAAMC,WAAa,EAAKC,MAAMI,MACzB,CACLL,WAAYD,EAAMC,WAAaW,GAI5B,CACLX,WAAYD,EAAMC,gB,EAKxBa,SAAW,WACT,IAAMF,EAAc,EAAKZ,MAAMC,WAAa,EAAKC,MAAMW,QAAU,EAC7D,EAAKb,MAAMC,WAAa,EACxB,EAAKC,MAAMW,QAEf,EAAKH,UAAS,SAACV,GACb,OAAIA,EAAMC,WAAa,EACd,CACLA,WAAYD,EAAMC,WAAaW,GAI5B,CACLX,WAAYD,EAAMC,gB,4CAKxB,WAAU,IAAD,OACP,OACE,oCACE,6BAEIc,KAAKb,MAAMc,KAAKC,OAAOF,KAAKf,MAAMC,YAAc,IAGpD,yBAAKiB,aAAW,2BACd,wBAAIC,UAAU,cACZ,4BACE,4BACEC,KAAK,SACLD,UAAqC,IAA1BJ,KAAKf,MAAMC,WAClB,2BACA,mBAEJoB,QAASN,KAAKD,UANhB,eAYAC,KAAKX,YAAYkB,KAAI,SAACnB,EAAMoB,GAAP,OACnB,wBACEC,IAAKD,GAEL,4BACEH,KAAK,SACLD,UAAWI,EAAQ,KAAO,EAAKvB,MAAMC,WACjC,0BACA,mBACJoB,QAAS,EAAKb,cAAce,EAAQ,IAEnCA,EAAQ,OAKjB,4BACE,4BACEH,KAAK,SACLD,UAAWJ,KAAKf,MAAMC,aAAec,KAAKb,MAAMI,MAC5C,2BACA,mBAEJe,QAASN,KAAKJ,UANhB,gB,GA1FWc,IAAMC,gBAmH/B3B,EAAW4B,aAAe,CACxBxB,KAAM,EACNU,QAAS,EACTG,KAAM,IAGOjB,QCzHTiB,EAAO,CACX,qBACA,yDACA,2BACA,SACA,uCACA,mDACA,uCACA,iCACA,IACA,KAeaY,EAZH,kBACV,oCACE,0CACA,kBAAC,EAAD,CACEtB,MAAO,GACPH,KAAM,EACNU,QAAS,EACTG,KAAMA,MCpBZa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7e946272.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.scss';\n\nclass Pagination extends React.PureComponent {\n  state = {\n    activePage: this.props.page,\n  }\n\n  listOfPages = new Array(this.props.total).fill(1);\n\n  setActivePage = pageNumber => () => {\n    this.setState({\n      activePage: pageNumber,\n    });\n  }\n\n  nextPage = () => {\n    const stepPerPage = (\n      this.state.activePage + this.props.perPage > this.props.total\n        ? this.props.total - this.state.activePage\n        : this.props.perPage);\n\n    this.setState((state) => {\n      if (state.activePage < this.props.total) {\n        return {\n          activePage: state.activePage + stepPerPage,\n        };\n      }\n\n      return {\n        activePage: state.activePage,\n      };\n    });\n  }\n\n  prevPage = () => {\n    const stepPerPage = this.state.activePage - this.props.perPage < 1\n      ? this.state.activePage - 1\n      : this.props.perPage;\n\n    this.setState((state) => {\n      if (state.activePage > 1) {\n        return {\n          activePage: state.activePage - stepPerPage,\n        };\n      }\n\n      return {\n        activePage: state.activePage,\n      };\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          {\n            this.props.data[Number(this.state.activePage) - 1]\n          }\n        </div>\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"Pagination\">\n            <li>\n              <button\n                type=\"button\"\n                className={this.state.activePage === 1\n                  ? 'Pagination__prev-disable'\n                  : 'Pagination__prev'\n                }\n                onClick={this.prevPage}\n              >\n                Previously\n              </button>\n            </li>\n            {\n              this.listOfPages.map((page, index) => (\n                <li\n                  key={index}\n                >\n                  <button\n                    type=\"button\"\n                    className={index + 1 === +this.state.activePage\n                      ? 'Pagination__item-active'\n                      : 'Pagination__item'}\n                    onClick={this.setActivePage(index + 1)}\n                  >\n                    {index + 1}\n                  </button>\n                </li>\n              ))\n            }\n            <li>\n              <button\n                type=\"button\"\n                className={this.state.activePage === this.props.total\n                  ? 'Pagination__next-disable'\n                  : 'Pagination__next'\n                }\n                onClick={this.nextPage}\n              >\n                Next\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </>\n    );\n  }\n}\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n  data: PropTypes.arrayOf(),\n};\n\nPagination.defaultProps = {\n  page: 1,\n  perPage: 1,\n  data: [],\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\nimport Pagination from './components/Pagination';\n\nconst data = [\n  'Тут',\n  'розміщені',\n  'дані',\n  'з',\n  'різних',\n  'сторінок',\n  'даного',\n  'сайту',\n  '!',\n  ')',\n];\n\nconst App = () => (\n  <>\n    <h1>Pagination</h1>\n    <Pagination\n      total={10}\n      page={1}\n      perPage={1}\n      data={data}\n    />\n  </>\n);\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}